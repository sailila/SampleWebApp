name: Automatic Version Bump

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to fetch tags

      - name: Setup git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Get latest tag
        id: get_latest_tag
        run: |
          echo "tag=$(git describe --tags --abbrev=0 2>/dev/null || echo v0.0.0)" >> $GITHUB_OUTPUT

      - name: Decide bump type
        id: bump_type
        run: |
          message="${{ github.event.head_commit.message }}"
          if echo "$message" | grep -q "#major"; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif echo "$message" | grep -q "#minor"; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        id: bump_version
        run: |
          current="${{ steps.get_latest_tag.outputs.tag }}"
          version="${current#v}"
          IFS='.' read -r major minor patch <<< "$version"

          case "${{ steps.bump_type.outputs.type }}" in
            major)
              major=$((major+1)); minor=0; patch=0 ;;
            minor)
              minor=$((minor+1)); patch=0 ;;
            patch)
              patch=$((patch+1)) ;;
          esac

          new="v${major}.${minor}.${patch}"
          echo "new_tag=$new" >> $GITHUB_OUTPUT
          git tag "$new"
          git push origin "$new"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
